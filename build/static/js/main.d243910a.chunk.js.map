{"version":3,"sources":["components/contactForm/styledForm.js","redux/actions/contactsActions.js","components/notifications/styledNotification.js","components/notifications/Notification.js","components/contactForm/ContactForm.js","components/contactList/styledList.js","components/contactList/ContactList.js","components/filter/styledFilter.js","components/filter/Filter.js","components/styledApp.js","components/App.js","redux/redusers/contactsReducer.js","redux/redusers/rootRedusers.js","redux/store.js","index.js"],"names":["FormWrapper","styled","form","addContactActionCreator","createAction","data","payload","id","uuidv4","deleteContactActionCreator","e","target","dataset","filterContactsActionCreater","value","alertContactsActionCreater","AlertWrapper","div","Notification","text","className","connect","state","contacts","items","dispatch","useState","name","number","setState","useEffect","setTimeout","handleChange","prev","CSSTransition","in","classNames","timeout","unmountOnExit","onSubmit","preventDefault","length","some","contact","toLowerCase","type","onChange","Div","LI","transition","li","attrs","mountOnEnter","console","log","filter","item","includes","TransitionGroup","component","map","data-id","onClick","FilterWrapper","placeholder","PhonebookWrapper","appear","createReducer","action","_","combineReducers","rootReducer","contactsReducer","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d243910a.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const FormWrapper = styled.form`\nmargin-bottom: 20px;\n.label{\n    font-size: 20px;\n    text-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #808080;\n}\n.input{\n    margin: 5px 0 20px 0;\n    padding: 5px 10px;\n  \n    width: 100%;\n    \n    font-size: 20px;\n    border-radius: 5px;\n    border: 1px solid #afaeb0;\n     &:hover {\n   box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);}\n}\n.buttonWrapper{\n   display:flex;\n   justify-content:flex-end;\n}\n.button{\n    \t\n   width: 25%;\n   padding: 5px 10px; \n   font-size: 20px;\n   border-radius: 5px;\n   border-color: #eeedfa;\n   text-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #808080;\n   background-color:#eeedfa;\n   cursor: pointer;\n   \n   &:hover {\n       background-color:#3CB371;\n       box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);}\n}\n.alertSlide-enter{\ntransform: translateX(200%);\n}\n.alertSlide-enter-active{\n    transform: translateX(0);\n\ttransition: all 250ms linear;\n}\n.alertSlide-exit{\n    transform: translateX(0);\n}\n.alertSlide-active{\n    transform: translateX(200%);\n\ttransition: all 250ms linear;\n}\n\n`","import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const addContactActionCreator = createAction(\"ADD_NEW_CONTACT\", data => {\n    return {\n        payload: { ...data, id: uuidv4() }\n    }\n})\n\nexport const deleteContactActionCreator = createAction(\"DELETE_NEW_CONTACT\", e => {\n    const id = e.target.dataset.id;\n    return {\n        payload: id\n    }\n})\n\nexport const filterContactsActionCreater = createAction(\"FILTER_CONTACT\", e => {\n    const { value } = e.target;\n    return {\n        payload: value,\n    }\n})\n\nexport const alertContactsActionCreater = createAction(\"ALERT_CONTACT\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// export const addContactActionCreator = (data) => {\n//     return {\n//         type: ADDNEWCONTACT, payload: { ...data, id: uuidv4() }\n//     }\n// }\n\n// export const deleteContactActionCreator = (e) => {\n//     const id = e.target.dataset.id;\n//     return {\n//         type: DELETECONTACT, payload: id\n//     }\n// }\n\n// export const filterContactsActionCreater = (e) => {\n//     const { value } = e.target;\n//     return {\n//         type: SETFILTER, payload: value,\n//     }\n\n// }\n\n// export const alertContactsActionCreater = (text) => {\n//     return {\n//         type: SETALERT, payload: text\n//     }\n\n// }","import styled from 'styled-components';\n\nexport const AlertWrapper = styled.div`\nwidth: 50vw;\nmargin:0 auto;\npadding: 20px;\nbackground-color: #f55d67;\nborder: 1px solid #afaeb0;\nborder-radius: 5px;\n.alertText{\n    text-align: center;\n    font-size: 30px;\n    color: #ffffff;\n    text-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #808080;\n}\n\n`","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { AlertWrapper } from './styledNotification';\n\nconst Notification = ({ text }) => {\n    return (\n        <AlertWrapper>\n            <p className=\"alertText\">&#10071;{text}&#10071;</p>\n        </AlertWrapper>\n    )\n}\n\nexport default Notification\n\nNotification.propTypes = {\n    text: PropTypes.string.isRequired,\n}","import React, { useState, useEffect } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport PropTypes from \"prop-types\";\nimport { FormWrapper } from './styledForm';\nimport { connect } from 'react-redux';\nimport { addContactActionCreator, alertContactsActionCreater } from '../../redux/actions/contactsActions';\nimport Notification from '../notifications/Notification'\n// import { addContactActionCreator } from '../../redux/redusers/contactsReducer'\n\n\nconst ContactForm = ({ contacts, text, addContactActionCreator, alertContactsActionCreater }) => {\n    const [state, setState] = useState({\n        name: '',\n        number: '',\n    });\n    useEffect(() => {\n        if (text) {\n            setTimeout(() => { alertContactsActionCreater('') }, 2000)\n        }\n    }, [text, alertContactsActionCreater])\n\n    const hadlleSubmit = e => {\n        e.preventDefault();\n        if (!state.name.length) {\n            alertContactsActionCreater('Please, enter your name')\n        }\n        else if (!state.number.length) {\n            alertContactsActionCreater('Please, enter your number')\n        }\n        else {\n            if (contacts.some((contact) =>\n                contact.name.toLowerCase() === state.name.toLowerCase())) {\n\n                alertContactsActionCreater(`${state.name} is already in contacts.`)\n            }\n            else {\n                addContactActionCreator({ ...state })\n            }\n        }\n\n        setState({\n            name: '',\n            number: '',\n        })\n    }\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n        setState(prev => ({\n            ...prev, [name]: value\n        }))\n    }\n\n    return (\n        <>\n            {text &&\n                <CSSTransition\n                    in={true}\n                    classNames=\"alertSlide\"\n                    timeout={500}\n                    unmountOnExit\n                >\n                    <Notification text={text} />\n                </CSSTransition>}\n\n            <FormWrapper className=\"wrapper\" onSubmit={hadlleSubmit}>\n                <label className=\"label\">Name\n                     <input className=\"input\" type=\"text\" name=\"name\" value={state.name} onChange={handleChange}></input>\n                </label>\n                <label className=\"label\">Number\n                     <input className=\"input\" type=\"tel\" name=\"number\" value={state.number} onChange={handleChange}></input>\n                </label>\n                <div className=\"buttonWrapper\">\n                    <button className=\"button\" type=\"submit\">Add contact</button>\n                </div>\n            </FormWrapper>\n\n        </>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        contacts: state.contacts.items,\n        text: state.contacts.text,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        alertContactsActionCreater: (data) => {\n            dispatch(alertContactsActionCreater(data))\n        },\n        addContactActionCreator: (data) => {\n            dispatch(addContactActionCreator(data))\n        },\n    };\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\nContactForm.propTypes = {\n    addContactActionCreator: PropTypes.func.isRequired,\n    alertContactsActionCreater: PropTypes.func.isRequired,\n}\n","import styled from \"styled-components\";\n\nexport const Div = styled.div`\n.contactList{\n  list-style: none;\n}\n\n.itemContact{\n    display:flex;\n    justify-content: space-between;\n    padding: 5px 10px;\n    font-size: 20px;\n    background-color:#ffffff;\n    text-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #808080;\n    border: 1px solid #afaeb0;\n    border-radius: 5px;\n   \n     &:not(:last-child) {\n      margin-bottom: 10px;}\n     &:hover {\n   box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);}\n}\n\n}\n.button{\n   width: 25%;\n   padding: 5px 10px; \n   \t\n   font-size: 20px;\n   text-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #808080;\n\n   border-radius: 5px;\n   border-color: #eeedfa;\n\n   background-color:#eeedfa;\n   cursor: pointer;\n   \n   &:hover {\n       background-color:#3CB371;\n       box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);}\n\n`","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { Div } from './styledList';\nimport transition from 'styled-transition-group';\nimport { deleteContactActionCreator } from '../../redux/actions/contactsActions';\n\nconst LI = transition.li.attrs({\n    mountOnEnter: true,\n    unmountOnExit: true,\n    timeout: 250,\n})`\n&:enter{transform: translateX(-200%);}\n&:enter-active{\n    transform: translateX(0);\n\ttransition: all 250ms linear;\n}\n&:exit{transform: transform: translateX(0);}\n&:exit-active{\n    transform: translateX(200%);\n\ttransition: all 250ms linear;\n}\n`\n\nconst ContactList = ({ contacts, deleteContactActionCreator }) => {\n    return (\n\n        <Div>\n            <TransitionGroup component=\"ul\" className=\"contactList wrapper\">\n                {contacts.map(({ id, name, number }) => {\n                    return (\n                        <LI key={id} timeout={250} className=\"itemContact\">\n                            {`${name}:  ${number}`}\n                            <button className=\"button\" type=\"button\" data-id={id} onClick={deleteContactActionCreator}>Delete</button>\n                        </LI>\n                    )\n                })}\n\n            </TransitionGroup >\n        </Div>\n\n\n    )\n}\n\nconst mapStateToPerops = (state) => {\n    console.log(state)\n    return {\n        contacts: state.contacts.items.filter(item => item.name.toLowerCase().includes(state.contacts.filter.toLowerCase())),\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n        deleteContactActionCreator: (data) => {\n            dispatch(deleteContactActionCreator(data))\n        },\n    }\n}\n\n\nexport default connect(mapStateToPerops, mapDispatchToProps)(ContactList)\n\nContactList.propTypes = {\n    deleteContactActionCreator: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    })),\n}","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\nmargin-bottom: 20px;\n\n.titleFilter{\nfont-size: 25px;\ncolor:#2F4F4F;\ntext-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #808080;\n}\n.input{\n    margin: 20px 0 20px 0;\n    padding: 5px 10px;\n  \n    width: 100%;\n\n    font-size: 20px;\n    border-radius: 5px;\n    border: 1px solid #afaeb0;\n     &:hover {\n   box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);}\n}\n`;","import React from 'react'\nimport PropTypes from \"prop-types\";\nimport { FilterWrapper } from './styledFilter'\nimport { filterContactsActionCreater } from '../../redux/actions/contactsActions';\nimport { connect } from 'react-redux';\n\nconst Filter = ({ state, filter, filterContactsActionCreater }) => {\n    return (\n\n        <FilterWrapper className=\"wrapper\">\n            <h3 className=\"titleFilter\">Find contacts by name</h3>\n            <input name=\"filter\" type=\"text\" className=\"input\" placeholder=\"Search...\" value={filter} onChange={filterContactsActionCreater} />\n        </FilterWrapper>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.contacts.items,\n        filter: state.contacts.filter\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n        filterContactsActionCreater: (data) => {\n            dispatch(filterContactsActionCreater(data))\n        },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)\n\nFilter.propTypes = {\n    filterContactsActionCreater: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    })),\n}\n","import styled from 'styled-components';\n\nexport const PhonebookWrapper = styled.div`\n.mainTitle,.title{\ntext-align: center;\ncolor:#3b2dd6;\ntext-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #808080;\n}\n\n.mainTitle{\n    margin-bottom:20px;  \n    font-size: 40px;\n}\n.title{\n    margin-bottom:10px;\n    font-size: 30px;   \n}\n\n.titleSlide-appear{\n    transform: translateY(-100%);\n}\n.titleSlide-appear-active{\n    transform: translateY(0);\n    transition:transform 500ms linear;\n}\n\n.filterSlide-enter{\ntransform: scale(0);\n    \n}\n.filterSlide-enter-active{\n   transform: scale(1);\n  transition: transform 500ms ease-in-out;\n}\n.filterSlide-exit{\n    transform: scale(1);\n}\n.filterSlide-exit-active{\n    transform: scale(0);\n  transition: transform 500ms ease-in-out;\n}\n\n.alertSlide-enter{\ntransform: translateX(200%);\n}\n.alertSlide-enter-active{\n    transform: translateX(0);\n\ttransition: all 250ms linear;\n}\n.alertSlide-exit{\n    transform: translateX(0);\n}\n.alertSlide-active{\n    transform: translateX(200%);\n\ttransition: all 250ms linear;\n}\n`","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport ContactForm from './contactForm/ContactForm';\nimport ContactList from './contactList/ContactList';\nimport Filter from './filter/Filter';\nimport { PhonebookWrapper } from './styledApp';\nimport { connect } from 'react-redux';\n\nconst App = ({ contacts }) => {\n    return (\n        <PhonebookWrapper>\n            <CSSTransition\n                in={true}\n                appear={true}\n                classNames=\"titleSlide\"\n                timeout={500}\n                unmountOnExit\n            >\n                <h1 className=\"mainTitle\">Phonebook</h1>\n            </CSSTransition>\n            <ContactForm />\n            <h2 className=\"title\">Contacts</h2>\n            <CSSTransition\n                in={contacts.length > 1}\n                classNames=\"filterSlide\"\n                timeout={500}\n                unmountOnExit>\n                <Filter />\n            </CSSTransition>\n            {contacts.length > 0 && (<CSSTransition\n                in={true}\n                appear={true}\n                classNames=\"titleSlide\"\n                timeout={500}\n                unmountOnExit>\n                <ContactList contacts={contacts} />\n            </CSSTransition>)}\n        </PhonebookWrapper >\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return { contacts: state.contacts.items };\n}\n\nexport default connect(mapStateToProps)(App)\n\n\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from \"redux\";\nimport { addContactActionCreator, deleteContactActionCreator, filterContactsActionCreater, alertContactsActionCreater } from '../actions/contactsActions';\n\nconst addContact = (state, action) => [...state, action.payload]\n\nconst deleteContact = (state, action) => [...state.filter((item) => item.id !== action.payload)]\n\nconst filterContact = (_, action) => action.payload\n\nconst alertContact = (_, action) => action.payload\n\nconst items = createReducer([], {\n    [addContactActionCreator]: addContact,\n    [deleteContactActionCreator]: deleteContact,\n})\n\nconst filter = createReducer('', {\n    [filterContactsActionCreater]: filterContact,\n})\n\nconst text = createReducer('', {\n    [alertContactsActionCreater]: alertContact,\n})\n\n// const contactsReducer = (state = { ...initialState }, action) => {\n//     switch (action.type) {\n//         case addContactActionCreator.type:\n//             return { ...state, items: [...state.items, action.payload] };\n//         case deleteContactActionCreator.type:\n//             return { ...state, items: [...state.items.filter((item) => item.id !== action.payload)] };\n//         case filterContactsActionCreater.type:\n//             return { ...state, filter: action.payload, };\n//         case alertContactsActionCreater.type:\n//             return { ...state, text: action.payload, }\n\n//         default:\n//             return state;\n//     }\n// }\n\n// const initialState = {\n//     items: [],\n//     filter: '',\n//     text: '',\n// }\n\n\n\nexport default combineReducers({\n    items,\n    filter,\n    text,\n})\n\n// export default contactsReducer","import { combineReducers } from 'redux';\nimport contactsReducer from './contactsReducer';\n\nconst rootReducer = combineReducers({\n    contacts: contactsReducer,\n})\n\nexport default rootReducer","// import { createStore } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit'\n// import { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './redusers/rootRedusers';\n\n// const store = createStore(rootReducer, composeWithDevTools());\nconst store = configureStore(\n    {\n        reducer: rootReducer,\n    }\n)\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './components/App';\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}